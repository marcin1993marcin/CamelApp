/**
 * This class is generated by jOOQ
 */
package com.app.camel.model.tables;


import com.app.camel.model.Keys;
import com.app.camel.model.Library;
import com.app.camel.model.tables.records.SalaryRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Salary extends TableImpl<SalaryRecord> {

    private static final long serialVersionUID = 1467422123;

    /**
     * The reference instance of <code>library.salary</code>
     */
    public static final Salary SALARY = new Salary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SalaryRecord> getRecordType() {
        return SalaryRecord.class;
    }

    /**
     * The column <code>library.salary.id</code>.
     */
    public final TableField<SalaryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>library.salary.Users_id</code>.
     */
    public final TableField<SalaryRecord, Integer> USERS_ID = createField("Users_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>library.salary.Positions_id</code>.
     */
    public final TableField<SalaryRecord, Integer> POSITIONS_ID = createField("Positions_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>library.salary.monthly</code>.
     */
    public final TableField<SalaryRecord, Integer> MONTHLY = createField("monthly", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>library.salary.per_hour</code>.
     */
    public final TableField<SalaryRecord, Integer> PER_HOUR = createField("per_hour", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>library.salary.date_from</code>.
     */
    public final TableField<SalaryRecord, Date> DATE_FROM = createField("date_from", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>library.salary.date_to</code>.
     */
    public final TableField<SalaryRecord, Date> DATE_TO = createField("date_to", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>library.salary</code> table reference
     */
    public Salary() {
        this("salary", null);
    }

    /**
     * Create an aliased <code>library.salary</code> table reference
     */
    public Salary(String alias) {
        this(alias, SALARY);
    }

    private Salary(String alias, Table<SalaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Salary(String alias, Table<SalaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Library.LIBRARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SalaryRecord> getPrimaryKey() {
        return Keys.KEY_SALARY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SalaryRecord>> getKeys() {
        return Arrays.<UniqueKey<SalaryRecord>>asList(Keys.KEY_SALARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SalaryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SalaryRecord, ?>>asList(Keys.FK_POSITIONS_HAS_SALARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Salary as(String alias) {
        return new Salary(alias, this);
    }

    /**
     * Rename this table
     */
    public Salary rename(String name) {
        return new Salary(name, null);
    }
}
